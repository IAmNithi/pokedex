{"version":3,"sources":["components/Header.js","components/Banner.js","components/Search.js","components/Card.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Banner","Search","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchParam","e","setState","target","value","props","onSubmit","_this2","type","onChange","changeEvent","placeholder","onClick","emitChange","emitReset","Card","cardData","items","name","map","typ","index","key","base","href","rel","count","Body","userList","userData","moreUserList","length","addValue","i","push","idx","item","Card_Card","data","renderCard","addMore","require","App","serviceData","onSearchSubmit","bind","assertThisInitialized","enteredValue","toLowerCase","presentValue","filter","da","indexOf","Header_Header","Banner_Banner","Search_Search","Body_Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b323ce88.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n      <div className=\"col-12 text-center\">\n       <h5 className=\"header-text\">Pokedex-Builder</h5>\n      </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Banner extends Component {\n  render() {\n    return (\n      <div className=\"banner\">\n      <div className=\"banner-cover\"></div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Search extends Component {\n  constructor(){\n    super();\n    this.state = {\n      searchParam: ''\n    }\n  }\n  changeEvent(e){\n    this.setState({\n      searchParam: e.target.value\n    });\n  }\n  emitChange(e){\n    this.props.onSubmit(this.state.searchParam);\n  }\n  emitReset(e){\n    this.setState({\n      searchParam: ''\n    }, function(){\n      this.props.onSubmit(this.state.searchParam);\n    });\n  }\n  render() {\n    return (\n      <div className=\"search-header\">\n  <div className=\"container text-center\">\n  <div className=\"row\">\n  <div className=\"col-md-1\"></div>\n    <div className=\"col-md-4\">\n      <input type=\"text\" onChange={(e) => this.changeEvent(e)} className=\"form-control\" placeholder=\"Search PokeMon\" />\n    </div>\n    <div className=\"col-md-3\">\n      <button className=\"btn btn-custom\" onClick={(e) => this.emitChange(e)}>Search</button>\n    </div>\n    <div className=\"col-md-3\">\n      <button className=\"btn btn-common\" onClick={(e) => this.emitReset(e)}>Reset</button>\n    </div>\n  <div className=\"col-md-1\"></div>\n  </div>\n  </div>\n</div>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardData: this.props.items\n    }\n   }\n  render() {\n    return (\n      <div className=\"card\">\n            <div className=\"card-body text-center\">\n              <h5 className=\"card-title\">{this.state.cardData.name['english']}</h5>\n              <p className=\"card-text\">{this.state.cardData.name['japanese']}, {this.state.cardData.name['chinese']}</p>\n              <p className=\"card-text tag\">Type: {this.state.cardData.type.map((typ, index) => { return <span className=\"pokemon-type\"  key={index}>{typ}</span>})}</p>\n              <div className=\"restaurent-details\">\n                <div className=\"rating\">Attack: {this.state.cardData.base['Attack']}</div>\n                <div>Defense: {this.state.cardData.base['Defense']}</div>\n                <div>HP: {this.state.cardData.base['HP']}</div>\n              </div>\n              <div className=\"card-footer text-center\">\n                <a className=\"btn btn-pokemon\" href={'https://www.google.com/search?query='+this.state.cardData.name['english']} target=\"_blank\" rel=\"noopener noreferrer\">Know More</a>\n              </div>\n            </div>\n          </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Card from './Card';\nlet count = 10;\nexport default class Body extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userList: props.userData,\n      moreUserList: []\n    };\n  }\n  componentWillMount() {\n    if(this.state.userList.length > 10) {\n      let addValue = [];\n      for (let i = 0; i < count; i++) {\n        addValue.push(this.state.userList[i])\n      }\n      this.setState({\n        moreUserList: addValue\n      });\n    } else {\n      this.setState({\n        moreUserList: this.state.userList\n      });\n    }\n  }\n  componentWillReceiveProps(props){\n    if(props.userData.length > 10) {\n      let addValue = [];\n      for (let i = 0; i < count; i++) {\n        addValue.push(props.userData[i])\n      }\n      this.setState({\n        moreUserList: addValue\n      });\n    } else {\n      this.setState({\n        moreUserList: props.userData\n      });\n    }\n  }\n  renderCard(idx, item) {\n    return <div className=\"col-md-4\" key={idx}>\n      <Card items={item} />\n    </div>;\n  }\n  addMore() {\n    if (count < this.state.userList.length) {\n      count += 10;\n      let addValue = [];\n      for (let i = 0; i < count; i++) {\n        addValue.push(this.state.userList[i])\n      }\n      this.setState({\n        moreUserList: addValue\n      });\n    } else {\n      this.setState({\n        moreUserList: this.state.userList\n      });\n    }\n\n  }\n  render() {\n    return (\n      <div className=\"body mt-4\">\n        <div className=\"container\">\n        {this.state.moreUserList.length !== 0 ? \n          <div className=\"row\">\n            {this.state.moreUserList.map((data, index) => {\n              return this.renderCard(index, data);\n            })}\n            {this.state.moreUserList.length > 9 ? <div className=\"col-12 text-center mb-3\">\n              <button className=\"btn btn-primary btn-large\" onClick={(e) => this.addMore(e)}>Show More</button>\n            </div> : '' }\n          </div> : \n          <div className=\"row\">\n        <div className=\"col-md-12 text-center\">\n        <h3>No Results Found</h3>\n        </div>\n        </div> }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Banner from './components/Banner';\nimport Search from './components/Search';\nimport Body from './components/Body';\nimport './App.css';\nvar data = require('./pokedex.json');\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      serviceData: data\n    }\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n  }\n  onSearchSubmit(e){\n    this.setState({\n      serviceData: []\n    }, function() {\n    if (e.length !== 0) {\n        const enteredValue = e.toLowerCase();\n        const presentValue = data.filter(function(da) {\n            return da.name['english'].toLowerCase().indexOf(enteredValue) > -1;\n        });\n        this.setState({\n          serviceData: presentValue \n        });\n    } else {\n      this.setState({\n        serviceData: data \n      });\n    }\n  });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Banner />\n        <Search onSubmit={this.onSearchSubmit}/>\n        <Body userData={this.state.serviceData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}